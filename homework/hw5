import random

def neighbor(f, p, h):
    p1 = [p_i + random.uniform(-h, h) for p_i in p] 
    f1 = f(*p1) 
    return p1, f1

def hillClimbing(f, p, h=0.01):
    failCount = 0                  
    while (failCount < 10000):       
        fnow = f(*p)                 
        p1, f1 = neighbor(f, p, h)
        if f1 >= fnow:              
            fnow = f1                
            p = p1
            print('p=', p, 'f(p)=', fnow)
            failCount = 0            
        else:                        
            failCount = failCount + 1
    return p,fnow             

def f(x, y, z):
    return -1*(x**2+y**2+z**2)

initial_position = [0, 0, 0]
final_position, max_value = hillClimbing(f, initial_position)
print('Final position:', final_position)
print('Maximum value:', max_value)

