深度優先搜尋法解決八皇后問題


def is_safe(board, row, col, n):
    # 檢查同一列是否有皇后
    for i in range(row):
        if board[i] == col or \
           board[i] - i == col - row or \
           board[i] + i == col + row:
            return False
    return True

def solve_n_queens_util(board, row, n, solutions):
    if row == n:
        solutions.append(board.copy())
        return

    for col in range(n):
        if is_safe(board, row, col, n):
            board[row] = col
            solve_n_queens_util(board, row + 1, n, solutions)
            board[row] = 0

def solve_n_queens(n):
    board = [0] * n
    solutions = []
    solve_n_queens_util(board, 0, n, solutions)
    return solutions

# 測試
n = 8
solutions = solve_n_queens(n)
for solution in solutions:
    print(solution)
